1. You can only have 5 Elastic IP in your account
2. When we are doing SSH into our EC2 machines:
    • We can’t use a private IP, because we are not in the same network • We can only use the public IP.
3. If your machine is stopped and then started, the public IP can change
4. 10 Gbps bandwidth with in the zone 
5. Cons: If the AZ fails, all instances fails at the same time
6.   You can create ENI independently and attach them on the fly (move them) on EC2 instances for failover
7. An instance can NOT be hibernated more than 60 days
    Hibernate: • Supported Instance Families – C3, C4, C5, I3, M3, M4, R3, R4,T2,T3, ...
                • Instance RAM Size – must be less than 150 GB.
                • Instance Size – not supported for bare metal instances.
                • AMI – Amazon Linux 2, Linux AMI, Ubuntu, RHEL, CentOS & Windows... • Root Volume – must be EBS, encrypted, not instance store, and large
                • Available for On-Demand, Reser ved and Spot Instances
8. • It’s locked to an Availability Zone (AZ)
    • An EBS Volume in us-east-1a cannot be attached to us-east-1b 
    • To move a volume across, you first need to snapshot it
9. EBS Snapshots Features: 
    • EBS Snapshot Archive: • Move a Snapshot to an ”archive tier” that is 75% cheaper
                            • Takes within 24 to 72 hours for restoring the archive
    • Recycle Bin for EBS Snapshots: • Setup rules to retain deleted snapshots so you can recover them after an accidental deletion
                                      • Specify retention (from 1 day to 1 year)
10. • EBS Volumes are characterized in Size | Throughput | IOPS (I/O Ops Per Sec), • Only gp2/gp3 and io1/io2 Block Express can be used as boot volumes
     - EBS Multi-Attach – io1/io2 family
11. EFS(Elastic File System): • EFS works with EC2 instances in multi-AZ, Highly available, scalable, expensive (3x gp2), pay per use 
12. EBS vs EFS – Elastic Block Storage:   • EBS volumes...
                                              • one instance (except multi-attach io1/io2)
                                              • are locked at the Availability Zone (AZ) level • gp2: IO increases if the disk size increases
                                              • gp3 & io1: can increase IO independently
                                          • To migrate an EBS volume across AZ 
                                              • Take a snapshot
                                              • Restore the snapshot to another AZ
                                              • EBS backups use IO and you shouldn’t run them while your application is handling a lot of traffic
13. Types of load balancer on AWS: 
    • Classic Load Balancer: Suppor ts TCP (Layer 4), HTTP & HTTPS (Layer 7)
    • Application Load Balancer: Application load balancers is Layer 7 (HTTP), Suppor t for HTTP/2 and WebSocket,• ALB are a great fit for micro services & container-based application
                                • The application servers don’t see the IP of the client directly
                                    • The true IP of the client is inserted in the header X-Forwarded-For
                                    • We can also get Port (X-Forwarded-Port) and proto (X-Forwarded-Proto)
                                     No charges for inter AZ data
    • Network Load Balancer (Layer 4): Forward TCP & UDP traffic to your instances,Handle millions of request per seconds, Less latency ~100 ms (vs 400 ms for ALB)
                                      NLB has one static IP per AZ, and supports assigning Elastic IP(helpful for whitelisting specific IP), You pay charges ($) for inter AZ data if enabled
    • Gateway Load Balancer(Layer 3 (Network Layer)): Deploy, scale, and manage a fleet of 3rd party network virtual appliances in AWS, Example: Firewalls, Intrusion Detection and Prevention Systems, Deep Packet Inspection Systems, payload manipulation, ...
    • Some load balancers can be setup as internal (private) or external (public) ELBs
14. Sticky Sessions (Session Affinity): It is possible to implement stickiness so that the same client is always redirected to the same instance behind a load balancer
                                        For both CLB & ALB, the “cookie” used for stickiness has an expiration date you control
15. ElastiCache: Applications queries ElastiCache, if not available, get from RDS and store in ElastiCache, Helps relieve load in RDS
16. Redis vs Memcached:
    REDIS
        • Multi AZ with Auto-Failover
        • Read Replicas to scale reads and have high availability
        • Data Durability using AOF persistence
        • Backup and restore features
        • Supports Sets and Sorted Sets
    MEMCACHED
        • Multi-node for partitioning of data (sharding)
        • No high availability (replication)
        • Non persistent
        • No backup and restore
        • Multi-threaded architecture
17. Route 53:
    • Domain Name System which translates the human friendly hostnames into the machine IP addresses, www.google.com => 172.217.18.36
    • DNS uses hierarchical naming structure
            .com
            example.com
            www.example.com
            api.example.com
    • TTL – amount of time the record cached at DNS Resolvers
    • Route 53 supports the following DNS record types:
        • (must know)A /AAAA / CNAME / NS
        • (advanced)CAA/DS/MX/NAPTR/PTR/SOA/TXT/SPF/SRV
    • A – maps a hostname to IPv4
    • AAAA – maps a hostname to IPv6
    • CNAME – maps a hostname to another hostname
    • The target is a domain name which must have an A or AAAA record
    • Can’t create a CNAME record for the top node of a DNS namespace (Zone Apex)
    • Example: you can’t create for example.com, but you can create for www.example.com
    • NS – Name Servers for the Hosted Zone
    • Control how traffic is routed for a domain
18. Elastic Beanstalk: Elastic Beanstalk is a developer centric view of deploying an application on AWS, • It uses all the component’s we’ve seen before: EC2, ASG, ELB, RDS, ...
    • Automatically handles capacity provisioning, load balancing, scaling, application health monitoring, instance configuration, ...
    • Just the application code is the responsibility of the developer
    • Beanstalk is free but you pay for the underlying instances
19. Amazon S3 Use cases: Buckets must have a globally unique name, S3 looks like a global service but buckets are created in a region, 5TB object storage, 
        • Backup and storage
        • Disaster Recovery
        • Archive
        • Hybrid Cloud storage • Application hosting
        • Media hosting
        • Data lakes & big data analytics • Software delivery
        • Static website
20. Amazon S3 – Static Website Hosting
        • S3 can host static websites and have them accessible on the Internet,  If you get a 403 Forbidden error, make sure the bucket policy allows public reads!
21. S3 Storage Classes: 
        • Amazon S3 Standard - General Purpose : Big Data analytics, mobile & gaming applications, content distribution...
        • Amazon S3 Standard-Infrequent Access (IA) • Amazon S3 One Zone-Infrequent Access:  For data that is less frequently accessed, but requires rapid access when needed
                    • Lower cost than S3 Standard
        • Amazon S3 Glacier Instant Retrieval: • Low-cost object storage meant for archiving / backup
                                                • Pricing: price for storage + object retrieval cost
                                                • Millisecond retrieval, great for data accessed once a quarter 
                                                • Minimum storage duration of 90 days
        • Amazon S3 Glacier Flexible Retrieval
        • Amazon S3 Glacier Deep Archive: • Standard (12 hours), Bulk (48 hours)
                                            • Minimum storage duration of 180 days
        • Amazon S3 Intelligent Tiering
22. • Can move between classes manually or using S3 Lifecycle configurations
23. Amazon S3 – Moving between Storage Classes:
        • You can transition objects between storage classes
        • For infrequently accessed object, move them to Standard IA
        • For archive objects that you don’t need fast access to, move them to Glacier or Glacier Deep Archive
        • Moving objects can be automated using a Lifecycle Rules
24: Your application can achieve at least 3,500 PUT/COPY/POST/DELETE or 5,500 GET/HEAD requests per second per prefix in a bucket.
25: S3Transfer Acceleration:
    • Increase transfer speed by transferring file to an AWS edge location which will forward the data to the S3 bucket in the target region
26: • If a client makes a cross-origin request on our S3 bucket, we need to enable the correct CORS headers
27: Amazon S3 – Pre-Signed URLs: • Generate pre-signed URLs using the S3 Console, AWS CLI or SDK
            • S3 Console – 1 min up to 720 mins (12 hours)
            • AWS CLI – configure expiration with --expires-in parameter in seconds (default 3600 secs, max. 604800 secs ~ 168 hours)
            • Users given a pre-signed URL inherit the permissions of the user that generated the URL for GET / PUT
28. CloudFront: • Improves read performance, content is cached at the edge, 216 Point of Presence globally
                • DDoS protection (because worldwide), integration with Shield, AWS Web Application Firewall
        origin: S3 bucket: For distributing files and caching them at the edge,CloudFront can be used as an ingress
         Custom Origin (HTTP)
            • Application Load Balancer
            • EC2 instance
            • S3 website (must first enable the bucket as a static S3 website)
            • Any HTTP backend you want
            • S3 website (must first enable the bucket as a static S3 website)
            • Any HTTP backend you want
29. CloudFront Geo Restriction: • You can restrict who can access your distribution
30. CloudFront – Cache Invalidations: In case you update the back-end origin, CloudFront doesn’t know about it and will only get the refreshed content after the TTL has expired, You can invalidate all files (*) or a special path (/images/*)
31: Unicast IP vs Anycast IP: 
        • Unicast IP: one server holds one IP address
        • Anycast IP: all servers hold the same IP address and the client is routed to the nearest one
32. AWS Global Accelerator vs CloudFront:
        • CloudFront
            • Improves performance for both cacheable content (such as images and videos)
            • Dynamiccontent(suchasAPIaccelerationanddynamicsitedelivery) • Content is served at the edge
        • Global Accelerator
            • ImprovesperformanceforawiderangeofapplicationsoverTCPorUDP
            • Proxying packets at the edge to applications running in one or more AWS Regions.
            • Goodfitfornon-HTTPusecases,suchasgaming(UDP),IoT(MQTT),orVoiceoverIP • Good for HTTP use cases that require static IP addresses
            • GoodforHTTPusecasesthatrequireddeterministic,fastregionalfailover
33. AWS Snow Family: Highly-secure, portable devices to collect and process data at the edge, and migrate data into and out of AWS
    • Physical data transport solution:moveTBs or PBs of data in or out of AWS
34. AWS Storage Gateway: • Bridge between on-premises data and cloud data
    • Types of Storage Gateway:
        • S3 File Gateway
        • FSx File Gateway
        • Volume Gateway
        • Tape Gateway
35. AWS Transfer Family: A fully-managed service for file transfers into and out of Amazon S3 or Amazon EFS using the FTP protocol
        • Supported Protocols
        • AWS Transfer for FTP (File Transfer Protocol (FTP))
        • AWS Transfer for FTPS (File Transfer Protocol over SSL (FTPS)) • AWS Transfer for SFTP (Secure File Transfer Protocol (SFTP))
36. AWS DataSync: Transfer between AWS storage services
37. Storage Comparison:
        • S3: Object Storage
        • S3Glacier:ObjectArchival
        • EBS volumes: Network storage for one EC2 instance at a time
        • Instance Storage: Physical storage for your EC2 instance (high IOPS)
        • EFS: Network File System for Linux instances, POSIX filesystem
        • FSx for Windows: Network File System for Windows servers
        • FSx for Lustre: High Performance Computing Linux file system
        • FSx for NetApp ONTAP: High OS Compatibility
        • FSx for OpenZFS: Managed ZFS file system
        • Storage Gateway: S3 & FSx File Gateway,Volume Gateway (cache & stored),Tape Gateway • Transfer Family: FTP, FTPS, SFTP interface on top of Amazon S3 or Amazon EFS
        • DataSync:Scheduledatasyncfromon-premisestoAWS,orAWStoAWS
        • Snowcone / Snowball / Snowmobile: to move large amount of data to the cloud, physically • Database: for specific workloads, usually with indexing and querying
38. AWS Integration & Messaging:
        Amazon SQS – Standard Queue:
        • Fully managed service, used to decouple applications
        • Attributes:
            • Unlimited throughput, unlimited number of messages in queue
            • Default retention of messages: 4 days, maximum of 14 days • Low latency (<10 ms on publish and receive)
            • Limitation of 256KB per message sent
        SQS: By default, the “message visibility timeout” is 30 seconds, • That means the message has 30 seconds to be processed
            • After the message visibility timeout is over, the message is “visible” in SQS
            • If a message is not processed within the visibility timeout, it will be processed twice 
            • A consumer could call the ChangeMessageVisibility API to get more time
            • If visibility timeout is high (hours), and consumer crashes, re-processing will take time 
            • If visibility timeout is too low (seconds), we may get duplicates
        Long Polling: When a consumer requests messages from the queue, it can optionally “wait” for messages to arrive if there are none in the queue
        FIFO Queue: • Limited throughput: 300 msg/s without batching, 3000 msg/s with
39. Amazon SNS – How to publish
        • Topic Publish (using the SDK) 
        • Create a topic
        • Create a subscription (or many)
        • Publish to the topic
     Direct Publish (for mobile apps SDK)
        • Create a platform application
        • Create a platform endpoint
        • Publish to the platform endpoint
        • Works with Google GCM, Apple APNS, Amazon ADM...
40. If you want to send the same S3 event to many SQS queues, use fan-out
41. SNS – Message Filtering: • JSON policy used to filter messages sent to SNS topic’s subscriptions
                                • If a subscription doesn’t have a filter policy, it receives every message
42. Kinesis Overview: • Makes it easy to collect, process, and analyze streaming data in real-time
                        • Ingest real-time data such as: Application logs, Metrics, Website clickstreams, IoT telemetry data...
                        • Kinesis Data Streams: capture, process, and store data streams, Retention between 1 day to 365 days
                                Capacity Modes: • Provisioned mode, • On-demand mode:
                        • Kinesis Data Firehose: load data streams into AWS data stores
                        • Kinesis Data Analytics: analyze data streams with SQL or Apache Flink
                        • Kinesis Video Streams: capture, process, and store video streams
43. Kinesis Data Streams vs Firehose:
    Kinesis Data Streams:
        • Streaming ser vice for ingest at scale
        • Write custom code (producer / consumer)
        • Real-time (~200 ms)
        • Manage scaling (shard splitting / merging)
        • Data storage for 1 to 365 days
        • Supports replay capability
    Kinesis Data Firehose:
        • Load streaming data into S3 / Redshift / OpenSearch / 3rd party / custom HTTP
        • Fully managed
        • Near real-time
        • Automatic scaling
        • No data storage
        • Doesn’t support replay capability
44.Amazon MQ
        • SQS, SNS are “cloud-native” services: proprietary protocols from AWS
        • Traditional applications running from on-premises may use open protocols such as:MQTT,AMQP,STOMP,Openwire,WSS
        • When migrating to the cloud, instead of re-engineering the application to use SQS and SNS, we can use Amazon MQ
        • Amazon MQ is a managed message broker service for
45. Amazon ECS – Load Balancer Integrations
        • Application Load Balancer supported and works for most use cases
        • Network Load Balancer recommended only for high throughput / high performance use cases, or to pair it with AWS Private Link
46. Amazon ECS – Data Volumes (EFS)
        • Mount EFS file systems onto ECS tasks
        • Works for both EC2 and Fargate launch types
        • Tasks running in any AZ will share the same data in the EFS file system
        • Fargate + EFS = Serverless
47. ECS Service Auto Scaling:
        • Automatically increase/decrease the desired number of ECS tasks
        • Amazon ECS Auto Scaling uses AWS Application Auto Scaling • ECSServiceAverageCPUUtilization
        • ECSServiceAverageMemoryUtilization-ScaleonRAM
        • ALBRequestCountPerTarget–metriccomingfromtheALB
        • Target Tracking – scale based on target value for a specific CloudWatch metric 
        • Step Scaling – scale based on a specified CloudWatch Alarm
        • Scheduled Scaling – scale based on a specified date/time (predictable changes)
        • ECS Service Auto Scaling (task level) ≠ EC2 Auto Scaling (EC2 instance level) 
        • Fargate Auto Scaling is much easier to setup (because Serverless)
48. Amazon EKS: It is a way to launch managed Kubernetes clusters on AWS, Collect logs and metrics using CloudWatch Container Insights
    Node Types:
        • Managed Node Groups
            • Creates and manages Nodes (EC2 instances) for you
            • Nodes are part of an ASG managed by EKS • Supports On-Demand or Spot Instances
        • Self-Managed Nodes
            • Nodes created by you and registered to the EKS cluster and managed by an ASG
            • You can use prebuilt AMI - Amazon EKS Optimized AMI • Supports On-Demand or Spot Instances
        • AWS Fargate
            • No maintenance required; no nodes managed
50. AWS App Runner:
        • Fully managed service that makes it easy to deploy web applications and APIs at scale
        • No infrastructure experience required
        • Start with your source code or container image
        • Automatically builds and deploy the web app
        • Automatic scaling, highly available, load balancer, encryption
        • VPC access support
        • Connect to database, cache, and message queue services
        • Use cases: web apps, APIs, microservices, rapid production deployments
51. serverless=  Initially... Serverless == FaaS (Function as a Service)
        Serverless in AWS:
            • AWS Lambda
            • DynamoDB
            • AWS Cognito
            • AWS API Gateway • Amazon S3
            • AWS SNS & SQS
            • AWS Kinesis Data Firehose • Aurora Serverless
            • Step Functions
            • Fargate
52: lambda: • Easy Pricing:
                • Pay per request and compute time
                • Free tier of 1,000,000 AWS Lambda requests and 400,000 GBs of compute time
53: Amazon DynamoDB: Fully managed, highly available with replication across multiple AZs, Scales to massive workloads, distributed database, Fast and consistent in performance
        • DynamoDB is made of Tables
        • Each table has a Primary Key (must be decided at creation time) • Each table can have an infinite number of items (= rows)
        • Each item has attributes (can be added over time – can be null) • Maximum size of an item is 400KB
        • Data types supported are:
        • Scalar Types – String, Number, Binary, Boolean, Null • Document Types – List, Map
        • Set Types – String Set, Number Set, Binary Set
    DynamoDB – Read/Write Capacity Modes:
        • Provisioned Mode (default)
            • You specify the number of reads/writes per second
            • You need to plan capacity beforehand
            • Pay for provisioned Read Capacity Units (RCU) & Write Capacity Units (WCU) • Possibility to add auto-scaling mode for RCU & WCU
        • On-Demand Mode
            • Read/writes automatically scale up/down with your workloads • No capacity planning needed
            • Pay for what you use, more expensive ($$$)
            • Great for unpredictable workloads, steep sudden spikes
54: AWS API Gateway: • AWS Lambda + API Gateway
            Endpoint Types: 
                • Edge-Optimized (default): For global clients
                    • Requests are routed through the CloudFront Edge locations (improves latency) • The API Gateway still lives in only one region
                • Regional:
                    • For clients within the same region
                    • Could manually combine with CloudFront (more control over the caching strategies and the distribution)
                • Private:
                • Can only be accessed from your VPC using an interface VPC endpoint (ENI),  Use a resource policy to define access
55. Amazon Cognito: Give users an identity to interact with our web or mobile application
        • Cognito User Pools:
            • Sign in functionality for app users
            • Integrate with API Gateway & Application Load Balancer
        
        • Cognito Identity Pools (Federated Identity):
            • Provide AWS credentials to users so they can access AWS resources directly • Integrate with Cognito User Pools as an identity provider
            • Cognito vs IAM: “hundreds of users”, ”mobile users”, “authenticate with SAML”
        • Create a serverless database of user for your web & mobile apps • Simple login: Username (or email) / password combination
        • Email & Phone Number Verification
        • Multi-factor authentication (MFA)
        • Federated Identities: users from Facebook, Google, SAML...
56, DatabaseTypes:
        • RDBMS (= SQL / OLTP): RDS,Aurora – great for joins
        • NoSQL database – no joins, no SQL : DynamoDB (~JSON), ElastiCache (key / value pairs), Neptune (graphs), DocumentDB (for MongoDB), Keyspaces (for Apache Cassandra)
        • Object Store: S3 (for big objects) / Glacier (for backups / archives)
        • Data Warehouse (= SQL Analytics / BI): Redshift (OLAP), Athena, EMR
        • Search: OpenSearch (JSON) – free text, unstructured searches
        • Graphs: Amazon Neptune – displays relationships between data
        • Ledger: Amazon Quantum Ledger Database
        • Time series:AmazonTimestream
57: Amazon DynamoDB – Summary:
• AWS proprietary technology, managed serverless NoSQL database, millisecond latency
    • Can replace ElastiCache as a key/value store (storing session data for example, using TTL feature)
58. Amazon S3 – Summary: 
• Serverless, scales infinitely, max object size is 5 TB, versioning capability
• Tiers: S3 Standard, S3 Infrequent Access, S3 Intelligent, S3 Glacier + lifecycle policy
• Features: Versioning, Encryption, Replication, MFA-Delete, Access Logs...
• Security: IAM, Bucket Policies, ACL, Access Points, Object Lambda, CORS, Object/Vault Lock • Encryption: SSE-S3, SSE-KMS, SSE-C, client-side,TLS in transit, default encryption
• Batch operations on objects using S3 Batch, listing files using S3 Inventory
• Performance:Multi-partupload,S3TransferAcceleration,S3Select
• Automation: S3 Event Notifications (SNS, SQS, Lambda, EventBridge)
• Use Cases: static files, key value store for big files, website hosting
59. DocumentDB:
• Aurora is an “AWS-implementation” of PostgreSQL / MySQL ...
• DocumentDB is the same for MongoDB (which is a NoSQL database)
• MongoDB is used to store, query, and index JSON data
• Similar “deployment concepts” as Aurora
• Fully Managed, highly available with replication across 3 AZ
• DocumentDB storage automatically grows in increments of 10GB
• Automatically scales to workloads with millions of requests per seconds
60. Amazon Neptune: • Fully managed graph database
